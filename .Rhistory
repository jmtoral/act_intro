cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_amor
cos_amor[,1]
cos_amor[,1] %>%
as_tibble()
cos_amor %>%
as_tibble()
cos_amor[,1] %>%
sort(decreasing = T) # arrange = Rbase
%>%
sort(decrea
cos_amor[,1] %>%
sort(decreasing = T) # arrange = Rbase
cos_amor[,1] %>%
sort(decreasing = T) # arrange = Rbase
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(10)# arrange = Rbase
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine")
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(10)# arrange = Rbase
ws_main <- glove$fit_transform(tcm_ws, n_iter = 300, convergence_tol = 0.001)
tcm_ws <- create_tcm(it, vector, skip_grams_window = 10)
tcm_ws[1]
glove <- GlobalVectors$new(rank = 50, x_max = 10)
ws_main <- glove$fit_transform(tcm_ws, n_iter = 300, convergence_tol = 0.001)
ws_context <- glove$components
ws_vector <- ws_main + t(ws_context)
amor <- ws_vector["amor", , drop = FALSE]
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(10)# arrange = Rbase
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(20)# arrange = Rbase
tcm_ws <- create_tcm(it, vector, skip_grams_window = 10)
tcm_ws[1]
glove <- GlobalVectors$new(rank = 50, x_max = 10)
ws_main <- glove$fit_transform(tcm_ws, n_iter = 1000, convergence_tol = 0.001)
s
ws_context <- glove$components
ws_vector <- ws_main + t(ws_context)
amor <- ws_vector["amor", , drop = FALSE]
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(20)# arrange = Rbase
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "jaccard",
norm = "l2")
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(20)# arrange = Rbase
# 6. Matriz co-ocurrencia -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
set.seed(123)
tcm_ws <- create_tcm(it, vector, skip_grams_window = 10)
tcm_ws[1]
glove <- GlobalVectors$new(rank = 50, x_max = 10)
ws_main <- glove$fit_transform(tcm_ws, n_iter = 400, convergence_tol = 0.001)
ws_context <- glove$components
ws_vector <- ws_main + t(ws_context)
amor <- ws_vector["amor", , drop = FALSE]
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(20)# arrange = Rbase
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo <- ws_vector["romeo", , drop = FALSE]
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_romeo[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
cos_romeo <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_romeo <- sim2(x = ws_vector,
y = romeo,
method = "cosine",
norm = "l2")
cos_romeo[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo_amor <- ws_vector["romeo", , drop = FALSE] +
ws_vector["julieta", , drop = FALSE]
romeo_amor <- ws_vector["romeo", , drop = FALSE] +
ws_vector["amor", , drop = FALSE]
cos_romeo_amor <- sim2(x = ws_vector,
y = romeo_amor,
method = "cosine",
norm = "l2")
cos_romeo_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo_sin_amor <- ws_vector["romeo", , drop = FALSE] -
ws_vector["amor", , drop = FALSE]
cos_romeo_sin_amor <- sim2(x = ws_vector,
y = romeo_sin_amor,
method = "cosine",
norm = "l2")
cos_romeo_sin_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
vocab <- create_vocabulary(it, ngram = c(1)) %>%
prune_vocabulary(term_count_min = 5)
vocab <- create_vocabulary(it, ngram = 1) %>%
prune_vocabulary(term_count_min = 5)
vocab <- create_vocabulary(it, ngram == 1) %>%
prune_vocabulary(term_count_min = 5)
vocab <- create_vocabulary(it) %>%
prune_vocabulary(term_count_min = 5)
vector <- vocab_vectorizer(vocab)
# 6. Matriz co-ocurrencia -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
set.seed(123)
tcm_ws <- create_tcm(it, vector, skip_grams_window = 5)
tcm_ws[1]
glove <- GlobalVectors$new(rank = 50, x_max = 10)
ws_main <- glove$fit_transform(tcm_ws, n_iter = 300, convergence_tol = 0.001)
ws_context <- glove$components
ws_vector <- ws_main + t(ws_context)
amor <- ws_vector["amor", , drop = FALSE]
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo <- ws_vector["romeo", , drop = FALSE]
cos_romeo <- sim2(x = ws_vector,
y = romeo,
method = "cosine",
norm = "l2")
cos_romeo[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo_amor <- ws_vector["romeo", , drop = FALSE] +
ws_vector["amor", , drop = FALSE]
cos_romeo_amor <- sim2(x = ws_vector,
y = romeo_amor,
method = "cosine",
norm = "l2")
cos_romeo_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo_sin_amor <- ws_vector["romeo", , drop = FALSE] -
ws_vector["amor", , drop = FALSE]
cos_romeo_sin_amor <- sim2(x = ws_vector,
y = romeo_sin_amor,
method = "cosine",
norm = "l2")
cos_romeo_sin_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
ws_tokens <- ws %>%
mutate(text = str_replace_all(text, "\\.--", " ")) %>%
mutate(text = str_replace_all(text, "[0-9]", " ")) %>%
mutate(text = str_replace_all(text, "_|á", " ")) %>%
unnest_tokens(palabra, text) %>%
filter(!palabra %in% c(tm::stopwords("es"), "dónde", "cómo")) %>%
filter(nchar(palabra) > 3)
lista_ws <- list(ws_tokens$palabra)
it <- itoken(lista_ws, progressbar = T)
vocab <- create_vocabulary(it) %>%
prune_vocabulary(term_count_min = 5)
vector <- vocab_vectorizer(vocab)
# 6. Matriz co-ocurrencia -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
set.seed(123)
tcm_ws <- create_tcm(it, vector, skip_grams_window = 5)
tcm_ws[1]
glove <- GlobalVectors$new(rank = 50, x_max = 10)
ws_main <- glove$fit_transform(tcm_ws, n_iter = 300, convergence_tol = 0.001)
ws_context <- glove$components
ws_vector <- ws_main + t(ws_context)
amor <- ws_vector["amor", , drop = FALSE]
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo <- ws_vector["romeo", , drop = FALSE]
cos_romeo <- sim2(x = ws_vector,
y = romeo,
method = "cosine",
norm = "l2")
cos_romeo[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo_amor <- ws_vector["romeo", , drop = FALSE] +
ws_vector["amor", , drop = FALSE]
cos_romeo_amor <- sim2(x = ws_vector,
y = romeo_amor,
method = "cosine",
norm = "l2")
cos_romeo_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo_sin_amor <- ws_vector["romeo", , drop = FALSE] -
ws_vector["amor", , drop = FALSE]
cos_romeo_sin_amor <- sim2(x = ws_vector,
y = romeo_sin_amor,
method = "cosine",
norm = "l2")
cos_romeo_sin_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
reina = ws_vector["rey", , drop = FALSE] -
ws_vector["hombre", , drop = FALSE] +
ws_vector["mujer", , drop = FALSE]
ws_vector["hombre", , drop = FALSE]
ws_vector["mujer", , drop = FALSE]
ws_vector["rey", , drop = FALSE]
reina = ws_vector["reyes", , drop = FALSE] -
ws_vector["hombre", , drop = FALSE] +
ws_vector["mujer", , drop = FALSE]
cos_reina <- sim2(x = ws_vector,
y = reina,
method = "cosine",
norm = "l2")
cos_reina[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
reina = ws_vector["amor", , drop = FALSE] -
ws_vector["muerte", , drop = FALSE] +
ws_vector["mujer", , drop = FALSE]
cos_reina <- sim2(x = ws_vector,
y = reina,
method = "cosine",
norm = "l2")
cos_reina[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
reina = ws_vector["muerte", , drop = FALSE] +
ws_vector["amor", , drop = FALSE]
cos_reina <- sim2(x = ws_vector,
y = reina,
method = "cosine",
norm = "l2")
cos_reina[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
reina = ws_vector["muerte", , drop = FALSE]
cos_reina <- sim2(x = ws_vector,
y = reina,
method = "cosine",
norm = "l2")
cos_reina[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
ws_tokens <- william %>%
mutate(text = str_replace_all(text, "\\.--", " ")) %>%
mutate(text = str_replace_all(text, "[0-9]", " ")) %>%
mutate(text = str_replace_all(text, "_|á", " ")) %>%
unnest_tokens(palabra, text) %>%
filter(!palabra %in% c(tm::stopwords("es"), "dónde", "cómo")) %>%
filter(nchar(palabra) > 3)
william2 <- gutenberg_download(c(56454))
ws_tokens <- william2 %>%
mutate(text = str_replace_all(text, "\\.--", " ")) %>%
mutate(text = str_replace_all(text, "[0-9]", " ")) %>%
mutate(text = str_replace_all(text, "_|á", " ")) %>%
unnest_tokens(palabra, text) %>%
filter(!palabra %in% c(tm::stopwords("es"), "dónde", "cómo")) %>%
filter(nchar(palabra) > 3)
lista_ws <- list(ws_tokens$palabra)
it <- itoken(lista_ws, progressbar = T)
vocab <- create_vocabulary(it) %>%
prune_vocabulary(term_count_min = 5)
vector <- vocab_vectorizer(vocab)
# 6. Matriz co-ocurrencia -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
set.seed(123)
tcm_ws <- create_tcm(it, vector, skip_grams_window = 5)
tcm_ws[1]
glove <- GlobalVectors$new(rank = 50, x_max = 10)
ws_main <- glove$fit_transform(tcm_ws, n_iter = 300, convergence_tol = 0.001)
ws_context <- glove$components
ws_vector <- ws_main + t(ws_context)
amor <- ws_vector["amor", , drop = FALSE]
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo <- ws_vector["romeo", , drop = FALSE]
reina = ws_vector["muerte", , drop = FALSE]
cos_reina <- sim2(x = ws_vector,
y = reina,
method = "cosine",
norm = "l2")
cos_reina[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
william <- gutenberg_download(c(53207))
ws_tokens <- william %>%
mutate(text = str_replace_all(text, "\\.--", " ")) %>%
mutate(text = str_replace_all(text, "[0-9]", " ")) %>%
mutate(text = str_replace_all(text, "_|á", " ")) %>%
unnest_tokens(palabra, text) %>%
filter(!palabra %in% c(tm::stopwords("es"), "dónde", "cómo")) %>%
filter(nchar(palabra) > 3)
lista_ws <- list(ws_tokens$palabra)
it <- itoken(lista_ws, progressbar = T)
vocab <- create_vocabulary(it) %>%
prune_vocabulary(term_count_min = 5)
vector <- vocab_vectorizer(vocab)
# 6. Matriz co-ocurrencia -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
set.seed(123)
tcm_ws <- create_tcm(it, vector, skip_grams_window = 5)
tcm_ws[1]
glove <- GlobalVectors$new(rank = 50, x_max = 10)
ws_main <- glove$fit_transform(tcm_ws, n_iter = 300, convergence_tol = 0.001)
ws_context <- glove$components
ws_vector <- ws_main + t(ws_context)
amor <- ws_vector["amor", , drop = FALSE]
cos_amor <- sim2(x = ws_vector,
y = amor,
method = "cosine",
norm = "l2")
cos_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo <- ws_vector["romeo", , drop = FALSE]
cos_romeo <- sim2(x = ws_vector,
y = romeo,
method = "cosine",
norm = "l2")
cos_romeo[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo_amor <- ws_vector["romeo", , drop = FALSE] +
ws_vector["amor", , drop = FALSE]
cos_romeo_amor <- sim2(x = ws_vector,
y = romeo_amor,
method = "cosine",
norm = "l2")
cos_romeo_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
romeo_sin_amor <- ws_vector["romeo", , drop = FALSE] -
ws_vector["amor", , drop = FALSE]
cos_romeo_sin_amor <- sim2(x = ws_vector,
y = romeo_sin_amor,
method = "cosine",
norm = "l2")
cos_romeo_sin_amor[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
reina = ws_vector["muerte", , drop = FALSE]
cos_reina <- sim2(x = ws_vector,
y = reina,
method = "cosine",
norm = "l2")
cos_reina[,1] %>%
sort(decreasing = T) %>%
head(30)# arrange = Rbase
cos_reina[,1] %>%
sort(decreasing = T) %>%
head(30) %>% as.data.frame()
1990-27
pacman::p_load(udpipe, tidyverse)
es <- udpipe_download_model(language = "spanish-ancora")
udmodel <- udpipe_load_model(file = es$file_model)
pacman::p_load(udpipe, tidyverse)
es <- udpipe_download_model(language = "spanish-ancora") # Descargar
es
udmodel <- udpipe_load_model(file = es$file_model)
es$file_model
txt <- "El día de hoy fue muy soleado y lo disfrutamos mucho."
txt <- iconv(txt, from = "Latin1", to = "UTF-8")
Encoding(txt)
tag <- udpipe_annotate(udmodel, x = txt)
tag <- as_tibble(tag)
View(tag)
pacman::p_load(udpipe, tidyverse, tidytext)
pp <- readtext::readtext("01_datos/literatura/pedro_páramo.pdf")
PP
pp
tag_pp <- udpipe_annotate(udmodel, x = pp$text)
tag_pp <- tag_pp %>%
as_tibble()
View(tag_pp)
pp <- readtext::readtext("01_datos/literatura/pedro_páramo.pdf") %>%
as_tibble() %>%
mutate(text = str_remove_all(text, "[«—»]"))
tag_pp <- udpipe_annotate(udmodel, x = pp$text)
tag_pp <- tag_pp %>%
as_tibble()
View(tag_pp)
tag_pp %>%
count(upos, sort = T)
tag_pp %>%
filter(upos == "NOUN") %>%
count(lemma, sort = T)
tag_pp %>%
filter(upos == "VERB") %>%
count(lemma, sort = T)
library(glmnet)
library(rsample)
library(tidytext)
library(tidyverse)
libros <- c("The War of the Worlds",
"Pride and Prejudice")
libros
library(gutenbergr)
textos <- gutenberg_download(title %in% libros) %>%
gutenberg_download(meta_fields = "title") %>%
mutate(document = row_number())
gutenberg_download(title %in% libros) %>%
gutenberg_download(meta_fields = "title")
?gutenberg_download
libros <- c(36, 1342)
textos <- gutenberg_download(libros) %>%
gutenberg_download(meta_fields = "title") %>%
mutate(document = row_number())
textos <- gutenberg_download(libros, meta_fields = "title") %>%
mutate(document = row_number())
textos
tokens_libros <- textos %>%
unnest_tokens(palabras, text) %>%
count(palabras) %>%
filter(n > 10) %>%
ungroup
View(tokens_libros)
tokens_libros <- textos %>%
unnest_tokens(palabras, text) %>%
group_by(palabras) %>%
filter(n() > 10) %>%
ungroup
View(tokens_libros)
textos
View(textos)
particion <- textos %>%
select(document)
particion
View(textos)
particion <- textos %>%
select(document) %>%
initial_split()
particion
?initial_split
15504/20673
entrenamiento <- training(particion)
prueba <- testing(particion)
View(entrenamiento)
matriz_train <- tokens_libros %>%
count(document, word)
matriz_train <- tokens_libros %>%
count(document, palabras)
matriz_train
matriz_train <- tokens_libros %>%
count(document, palabras) %>%
filter(palabras %in% tm::stopwords("es"))
matriz_train
matriz_train <- tokens_libros %>%
count(document, palabras) %>%
filter(!palabras %in% tm::stopwords("es"))
matriz_train <- tokens_libros %>%
count(document, palabras) %>%
filter(!palabras %in% tm::stopwords("es")) %>%
inner_join(entrenamiento)
matriz_train
matriz_train <- tokens_libros %>%
count(document, palabras) %>%
filter(!palabras %in% tm::stopwords("es")) %>%
inner_join(entrenamiento) %>%
cast_sparse(document, palabra, n)
tokens_libros %>%
count(document, palabras) %>%
filter(!palabras %in% tm::stopwords("es")) %>%
inner_join(entrenamiento)
matriz_train <- tokens_libros %>%
count(document, palabras) %>%
filter(!palabras %in% tm::stopwords("es")) %>%
inner_join(entrenamiento) %>%
cast_sparse(document, palabras, n)
matriz_train
matriz_train <- tokens_libros %>%
count(document, palabras) %>%
filter(!palabras %in% tm::stopwords("en")) %>%
inner_join(entrenamiento) %>%
cast_sparse(document, palabras, n)
matriz_train
