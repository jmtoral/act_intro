install.packages("tidyverse")
iris
iris %>%  mutate(Petal.Length*2)
#install.packages("tidyverse")
library(tidyverse)
iris
flores <- iris
flores <- iris
nombres <-  c("José", "Pablo", "María")
edades <- c(24, 35, 46) #conjunto
nombres <-  c(José, Pablo, María)
nombres
aprobado <- c(TRUE, FALSE, TRUE)
edades*2
nombres*2
aprobado *2
txt <- c("El", "niño", "tiene", "frío")
nchar(txt)
txt2 <- c("En", "invierno", "hace", "fío")
tabla <- tibble(nombres, edades, aprobado)
View(tabla)
tabla
as.data.frame(tabla)
iris
as_tibble(iris)
View(flores)
grandes_petalos <- flores %>%
filter(Petal.Width > 1.5) # Tiene que ser verdadero
View(grandes_petalos)
grandes_petalos <- flores %>%
filter(Petal.Width > 1.5) %>%  # Tiene que ser verdadero
filter(Sepal > 2.5)
grandes_petalos <- flores %>%
filter(Petal.Width > 1.5) %>%  # Tiene que ser verdadero
filter(Sepal.Width > 2.5)
View(grandes_petalos)
tabla
pasaron <- tabla %>%
filter(aprobado = TRUE)
View(pasaron)
pasaron <- tabla %>%
filter(aprobado == TRUE)
View(pasaron)
pasaron <- tabla %>%
filter(!aprobado == TRUE)  #! negación
pasaron <- tabla %>%
filter(aprobado == TRUE)  #==
no_pasaron <- tabla %>%
filter(!aprobado == TRUE)  #! negación
View(no_pasaron)
no_pasaron <- tabla %>%
filter(aprobado != TRUE)  #! negación
View(no_pasaron)
flores
virginicas <- flores %>%
filter(Species == "virginica")
View(virginicas)
osas_color <- flores %>%
filter(Species %in% c("setosa", "versicolor"))
osas_color <- flores %>%
filter(!Species %in% c("setosa", "versicolor"))
osas_color <- flores %>%
filter(Species %in% c("setosa", "versicolor"))
View(osas_color)
osas_color <- flores %>%
filter(!Species %in% c("setosa", "versicolor"))
View(osas_color)
osas_color_regex <- flores %>%
filter(str_detect(Species, "osa"))
View(osas_color_regex)
osas_color_regex <- flores %>%
filter(str_detect(Species, "osa|color"))
osas_color <- flores %>%
filter(Species %in% c("setosa", "versicolor")) #  contiene
osas_color_regex <- flores %>%
filter(str_detect(Species, "osa|color"))
View(osas_color_regex)
tabla
jose_m <- tabla %>%
filter(str_detect("(J|j)os(e|é)|(M|m)ar(i|í)a"))
jose_m <- tabla %>%
filter(str_detect(nombres, "(J|j)os(e|é)|(M|m)ar(i|í)a"))
View(jose_m)
library(gutenbergr)
gutenberg_download(57303)
x <- gutenberg_download(57303)
Encoding(x) <- "latin1"
iconv(x, "latin1", "UTF-8")
pacman::p_load(
tidyverse,
readtext, # Lee textos en pdf o texto plano
gutenbergr, # Acceso a la biblitoeca Gutenberg
epubr # Leer epubs
)
fecal <- epub("01_datos/politica/Decisiones difíciles.epub") %>%
unnest(data)
fecal
glimpse(fecal)
ver <- fecal %>%
select(section, text)
ver
head(text)
head(fecal$text)
txts <- readtext("01_datos/literatura/*.pdf") # * traéme todo en pdf
class(txts)
class(txts)
txts
txts %>% as_tibble()
pacman::p_load(tesseract)
esp <- tesseract_download("spa")
tesseract_download("spa")
esp <- tesseract("spa")
esp
text <- ocr("https://raw.githubusercontent.com/jmtoral/act_intro/main/01_datos/Captura.PNG",
engine = esp)
cat(text)
pacman::p_load(tesseract, pdftools)
pngfile <- pdftools::pdf_convert("01_datos/41intro (1).pdf", pages = c(2,3), dpi = 300)
class(pngfile)
pngfile
text <- ocr(pngfile,
engine = esp)
cat(text)
text <- ocr("01_datos/Captura2.PNG",
engine = esp)
cat(text)
